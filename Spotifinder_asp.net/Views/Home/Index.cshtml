@{
    ViewData["Home"] = "Home Page";
}

<!DOCTYPE html>
<html>
<head>
    <title>@ViewData["Home"]</title>
    <!-- Leaflet CSS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
</head>
<body>
    <h1>Search for a Song</h1>

    <form asp-action="Search" method="post">
        <input type="text" name="query" />
        <button type="submit">Search</button>
    </form>

    <div id="map" style="height: 400px;"></div>

    <!-- Leaflet JavaScript -->
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Initialize the map
            var map = L.map('map').setView(location, 13);

            // Add a tile layer
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
            }).addTo(map);

            // Function to add marker to the map
            function addMarkerToMap(location) {
                L.marker(location).addTo(map);
            }

            // Function to handle getting the user's location
            function getLocation() {
                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(showPosition, showError);
                } else {
                    alert("Geolocation is not supported by this browser.");
                }
            }

            // Function to show the user's position
            function showPosition(position) {
                var latitude = position.coords.latitude;
                var longitude = position.coords.longitude;
                var location = [latitude, longitude]; // Corrected order of latitude and longitude
                addMarkerToMap(location); // Add marker for user's current location
            }

            // Function to handle geolocation errors
            function showError(error) {
                switch (error.code) {
                    case error.PERMISSION_DENIED:
                        alert("User denied the request for Geolocation.");
                        break;
                    case error.POSITION_UNAVAILABLE:
                        alert("Location information is unavailable.");
                        break;
                    case error.TIMEOUT:
                        alert("The request to get user location timed out.");
                        break;
                    case error.UNKNOWN_ERROR:
                        alert("An unknown error occurred.");
                        break;
                }
            }

            // Call getLocation to initiate obtaining user's location
            getLocation();
        });
    </script>
</body>
</html>
